<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-09-26T22:45:35+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Rymoon’s Website</title><subtitle>A humble website.</subtitle><entry><title type="html">环境搭建</title><link href="http://localhost:4000/2020/09/26/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html" rel="alternate" type="text/html" title="环境搭建" /><published>2020-09-26T00:00:00+08:00</published><updated>2020-09-26T00:00:00+08:00</updated><id>http://localhost:4000/2020/09/26/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA</id><content type="html" xml:base="http://localhost:4000/2020/09/26/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html">&lt;h1 id=&quot;环境搭建anacondapytorchcudavs-code&quot;&gt;环境搭建：Anaconda+pytorch+CUDA+VS Code&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;请先通读此手册，再逐步安装。
本文改编自&lt;a href=&quot;https://blog.csdn.net/qq_41709360/article/details/103992231&quot;&gt;CSDN,超级详细！vscode+anaconda+tensorflow2.0 搭建机器学习开发环境&lt;/a&gt;，有删改。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;安装&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;VS Code&lt;/a&gt;，从官方网站上下载最新版本。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装扩展插件
&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-环境搭建/bar.png&quot; alt=&quot;side-bar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-环境搭建/ext-chinese.png&quot; alt=&quot;side-bar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-环境搭建/ext-ana.png&quot; alt=&quot;side-bar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-环境搭建/ext-python.png&quot; alt=&quot;side-bar&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装anaconda，官方下载。或使用&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/&quot;&gt;清华镜像源&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;运行Anaconda Navigator，点击环境(Environments)，点击Create创建新环境。&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-环境搭建/ana-nav.png&quot; alt=&quot;side-bar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-环境搭建/ana-nav2.png&quot; alt=&quot;side-bar&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;切换清华镜像作为下载源。&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/&quot;&gt;使用说明&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装&lt;a href=&quot;https://pytorch.org/get-started/locally/&quot;&gt;pytorch&lt;/a&gt;，根据官网提示选择相应版本。在Anaconda Prompt运行相应指令，比如&lt;/p&gt;

    &lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;conda&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;pytorch&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;torchvision&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;cudatoolkit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.2 &lt;span class=&quot;na&quot;&gt;-c &lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;pytorch&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-环境搭建/ana-prompt.png&quot; alt=&quot;side-bar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;验证安装效果。进入Python交互控制台(IDLE)，测试代码：&lt;/p&gt;

    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-环境搭建/idle.png&quot; alt=&quot;side-bar&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装&lt;a href=&quot;https://developer.nvidia.com/cuda-downloads&quot;&gt;CUDA&lt;/a&gt;官网下载。记得更新N卡驱动。其中，&lt;a href=&quot;https://developer.nvidia.com/cuda-10.2-download-archive?target_os=Windows&amp;amp;targetCUDA10.2&quot;&gt;CUDA10.2&lt;/a&gt;，2.6GB。&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-环境搭建/cuda.png&quot; alt=&quot;side-bar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-环境搭建/cuda2.png&quot; alt=&quot;side-bar&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;下载&lt;a href=&quot;https://developer.nvidia.com/cudnn&quot;&gt;cuDNN&lt;/a&gt;，放置到指定位置。bin文件夹里面的东西放到cuda下载文件夹下面的bin文件夹里，以此类推,对于include、lib文件夹。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;创建环境变量。请根据实际安装位置改变。这里是Cuda安装在默认位置C:\Program Files 中的情况。&lt;/p&gt;

    &lt;p&gt;NVCUDASAMPLES10_1_ROOT
&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-环境搭建/cuda3.png&quot; alt=&quot;side-bar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Path
&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-环境搭建/cuda4.png&quot; alt=&quot;side-bar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;win+r，打开cmd，输入：nvcc –version查看版本，出现如下图所示的页面就算安装成功了。
&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-环境搭建/cuda5.png&quot; alt=&quot;side-bar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;在python中测试cuda是否有效，&lt;/p&gt;

    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cuda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>rym</name></author><summary type="html">环境搭建：Anaconda+pytorch+CUDA+VS Code 请先通读此手册，再逐步安装。 本文改编自CSDN,超级详细！vscode+anaconda+tensorflow2.0 搭建机器学习开发环境，有删改。</summary></entry><entry><title type="html">A course in pytorch 2</title><link href="http://localhost:4000/2020/09/26/A-Course-in-Pytorch-2.html" rel="alternate" type="text/html" title="A course in pytorch 2" /><published>2020-09-26T00:00:00+08:00</published><updated>2020-09-26T00:00:00+08:00</updated><id>http://localhost:4000/2020/09/26/A%20Course%20in%20Pytorch-2</id><content type="html" xml:base="http://localhost:4000/2020/09/26/A-Course-in-Pytorch-2.html">&lt;h1 id=&quot;pytorch-入门&quot;&gt;Pytorch 入门&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文翻译自pytorch官方教程&lt;a href=&quot;https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html&quot;&gt;DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ&lt;/a&gt;，共四篇。
这是第二篇AUTOGRAD: AUTOMATIC DIFFERENTIATION.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;autograd-automatic-differentiation&quot;&gt;AUTOGRAD: AUTOMATIC DIFFERENTIATION&lt;/h2&gt;</content><author><name>vjy</name></author><summary type="html">Pytorch 入门 本文翻译自pytorch官方教程DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ，共四篇。 这是第二篇AUTOGRAD: AUTOMATIC DIFFERENTIATION.</summary></entry><entry><title type="html">A course in pytorch 3</title><link href="http://localhost:4000/2020/09/26/A-Course-in-Pytorch-3.html" rel="alternate" type="text/html" title="A course in pytorch 3" /><published>2020-09-26T00:00:00+08:00</published><updated>2020-09-26T00:00:00+08:00</updated><id>http://localhost:4000/2020/09/26/A%20Course%20in%20Pytorch-3</id><content type="html" xml:base="http://localhost:4000/2020/09/26/A-Course-in-Pytorch-3.html">&lt;h1 id=&quot;pytorch-入门&quot;&gt;Pytorch 入门&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文翻译自pytorch官方教程&lt;a href=&quot;https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html&quot;&gt;DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ&lt;/a&gt;，共四篇。
这是第三篇NEURAL NETWORKS.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;h1 id=&quot;神经网络&quot;&gt;神经网络&lt;/h1&gt;

&lt;p&gt;用torch.nn搭建神经网络。&lt;/p&gt;

&lt;p&gt;nn依赖自动微分(autograd)来搭建模型，并求梯度。一个nn.Module包括网络层(layer)，和（输入到输出的）前向方法(forward)。&lt;/p&gt;

&lt;p&gt;举个例子，一个图像分类网络convnet。这是一个简单的前馈网络。输入(input)依次经过各层，到达输出。一个典型的训练过程如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-A-Course-in-Pytorch-3/convnet.png&quot; alt=&quot;convnet&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;用一些可学习参数定义网络；&lt;/li&gt;
  &lt;li&gt;在输入数据集上迭代；&lt;/li&gt;
  &lt;li&gt;使输入通过网络；&lt;/li&gt;
  &lt;li&gt;计算损失(loss)（输出与正确相差多远）；&lt;/li&gt;
  &lt;li&gt;反向传播梯度(gradient)至各个参数；&lt;/li&gt;
  &lt;li&gt;更新网络参数(weight)，比如：
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;weight = weight - learning_rate * gradient&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;定义网络&quot;&gt;定义网络&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch.nn&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch.nn.functional&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# 1 input image channel, 6 output channels, 3x3 square convolution
&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;# kernel
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Conv2d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Conv2d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# an affine operation: y = Wx + b
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 6*6 from image dimension
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;84&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;84&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# Max pooling over a (2, 2) window
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_pool2d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# If the size is a square you can only specify a single number
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;max_pool2d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_flat_features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;num_flat_features&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# all dimensions except the batch dimension
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;num_features&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;num_features&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_features&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Out&lt;/span&gt;:

&lt;span class=&quot;kd&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;conv1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;kd&quot;&gt;Conv2d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;kernel_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;stride&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;conv2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;kd&quot;&gt;Conv2d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;kernel_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;stride&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;fc1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;kd&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;in_features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;576&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;out_features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;bias&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;fc2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;kd&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;in_features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;out_features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;84&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;bias&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;fc3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;kd&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;in_features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;84&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;out_features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;bias&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们定义了一个前向函数，后向(backward)函数（用于梯度计算）由pytorch的自动微分自动生成。在前向函数可以使用张量运算。&lt;/p&gt;

&lt;p&gt;net.parameters()返回模型的可学习参数。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# conv1's .weight
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Out&lt;/span&gt;:

&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;torch&lt;/span&gt;.Size&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;随机的32x32输入。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Note&lt;/em&gt;&lt;br /&gt;
这个网络(LeNet)的输入应为32x32. 在 MNIST 数据集上使用网络, 需要缩放至32x32.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1074&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0430&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.0831&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1322&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.0159&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0842&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.1799&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.1090&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0416&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.0307&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grad_fn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AddmmBackward&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;将所有参数的梯度缓冲区(buffer)置零，并且从随机的梯度开始反向传播。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero_grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;&lt;br /&gt;
torch.nn只支持mini-batches. torch.nn 包只支持样本的mini-batch作为输入(如：8x32x32)，而不是一个单独的输入（如：32x32）。&lt;br /&gt;
例如，nn.Conv2d的输入是4维张量nSamples x nChannels x Height x Width。&lt;br /&gt;
如果只有一个样本，用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;input.unsqueeze(0)&lt;/code&gt; 来增加一维(fake batch).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;综上，讲到的模块有，&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;torch.Tensor - A multi-dimensional array with support for autograd operations like backward(). Also holds the gradient w.r.t. the tensor.&lt;/li&gt;
  &lt;li&gt;nn.Module - Neural network module. Convenient way of encapsulating parameters, with helpers for moving them to GPU, exporting, loading, etc.&lt;/li&gt;
  &lt;li&gt;nn.Parameter - A kind of Tensor, that is automatically registered as a parameter when assigned as an attribute to a Module.&lt;/li&gt;
  &lt;li&gt;autograd.Function - Implements forward and backward definitions of an autograd operation. Every Tensor operation creates at least a single Function node that connects to functions that created a Tensor and encodes its history.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;已经完成的部分，&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;定义神经网络&lt;/li&gt;
  &lt;li&gt;处理输入，反向传播&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;还差，&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;计算损失&lt;/li&gt;
  &lt;li&gt;更新权重(weight)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;损失函数&quot;&gt;损失函数&lt;/h2&gt;

&lt;p&gt;损失函数以(output, target) 为输入, 计算一个非负实数来度量输出与目标相差多少。&lt;/p&gt;

&lt;p&gt;nn package 有几个不同的损失函数。 nn.MSELoss计算均方误差。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# a dummy target, for example
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# make it the same shape as output
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;criterion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MSELoss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;criterion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Out&lt;/span&gt;:

&lt;span class=&quot;kd&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.7155&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;grad_fn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;lt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;MseLossBackward&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;follow&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;backward&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;direction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;its&lt;/span&gt; .grad_fn &lt;span class=&quot;kd&quot;&gt;attribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;see&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;graph&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;computations&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;looks&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;this&lt;/span&gt;:

&lt;span class=&quot;kd&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;conv2d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;relu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;maxpool2d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;conv2d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;relu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;maxpool2d&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;linear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;relu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;linear&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;relu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;linear&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;MSELoss&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;当调用loss.backward()，整个计算图(graph)从loss开始计算微分。计算图中所有属性requires_grad=True的张量(Tensor)将在.grad属性上累加梯度，.grad也是一个张量。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grad_fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# MSELoss
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grad_fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# Linear
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grad_fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next_functions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# ReLU
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Out&lt;/span&gt;:

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;MseLossBackward&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7fcf8ef75e48&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;AddmmBackward&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7fcf8ef75f60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;AccumulateGrad&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7fcf8ef75f60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;backprop&quot;&gt;Backprop&lt;/h2&gt;

&lt;p&gt;调用loss.backward()开始反向传播，我们需要先清零梯度，否则梯度会累加。&lt;/p&gt;

&lt;p&gt;观察反向传播前后conv1.bias的梯度变化。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero_grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# zeroes the gradient buffers of all parameters
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'conv1.bias.grad before backward'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'conv1.bias.grad after backward'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bias&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Out&lt;/span&gt;:

&lt;span class=&quot;kd&quot;&gt;conv1&lt;/span&gt;.bias.grad &lt;span class=&quot;kd&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;backward&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;conv1&lt;/span&gt;.bias.grad &lt;span class=&quot;kd&quot;&gt;after&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;backward&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.0038&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.0054&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.0083&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.0059&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.0141&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.0297&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we have seen how to use loss functions.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;*Read Later * 
关于neural network package的&lt;a href=&quot;https://pytorch.org/docs/nn&quot;&gt;更多细节&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;update-the-weights&quot;&gt;Update the weights&lt;/h2&gt;

&lt;p&gt;最简单的更新规则是SGD(随机梯度下降，Stochastic Gradient Descent):&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;weight = weight - learning_rate * gradient&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;用python实现就是：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;learning_rate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;learning_rate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;有多种更新方式可用，包括SGD, Nesterov-SGD, Adam, RMSProp,等等。我们通过 torch.optim来使用这些方法。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch.optim&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optim&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# create your optimizer
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SGD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# in your training loop:
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero_grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# zero the gradient buffers
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;criterion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# Does the update
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;&lt;br /&gt;
使用 optimizer.zero_grad()将梯度手动清零。这是因为在反向传播中，计算梯度时会累加。
比如:&lt;/p&gt;
  &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;假如
a := f(x)
b := g(x)
y := a+b
则y.grad := a.grad + b.grad
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;</content><author><name>rym</name></author><summary type="html">Pytorch 入门 本文翻译自pytorch官方教程DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ，共四篇。 这是第三篇NEURAL NETWORKS.</summary></entry><entry><title type="html">A course in pytorch 4</title><link href="http://localhost:4000/2020/09/26/A-Course-in-Pytorch-4.html" rel="alternate" type="text/html" title="A course in pytorch 4" /><published>2020-09-26T00:00:00+08:00</published><updated>2020-09-26T00:00:00+08:00</updated><id>http://localhost:4000/2020/09/26/A%20Course%20in%20Pytorch-4</id><content type="html" xml:base="http://localhost:4000/2020/09/26/A-Course-in-Pytorch-4.html">&lt;h1 id=&quot;pytorch-入门&quot;&gt;Pytorch 入门&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文翻译自pytorch官方教程&lt;a href=&quot;https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html&quot;&gt;DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ&lt;/a&gt;，共四篇。
这是第四篇TRAINING A CLASSIFIER.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;h1 id=&quot;training-a-classifier训练分类器&quot;&gt;Training A Classifier训练分类器&lt;/h1&gt;

&lt;p&gt;现在，你知道如何定义神经网络，计算损失(loss)，以及更新权重(weight)。现在该考虑一下数据(data)的问题了。&lt;/p&gt;

&lt;h2 id=&quot;what-about-data&quot;&gt;What about data?&lt;/h2&gt;

&lt;p&gt;一般来说，处理图片、声音、文本和视频，你可以使用python的标准包来导入，转化为numpy，再变成pytorch中不同种类的张量(torch.*Tensor)。&lt;/p&gt;

&lt;p&gt;对于图片，可以用Pillow, OpenCV;
对于音频，可以用scipy和librosa;
对于文本，可以用Python或Cython原生函数或者NLTK和SaCy。&lt;/p&gt;

&lt;p&gt;特别对于计算机视觉(vision)，我们已经制作了torchvision包，报扩常用数据集(dataset)如Imagenet, CIFAR10, MNIST等等的加载器(dataloader)和对图像的处理器(transformer)。以上功能通过torchvision.datasets 和torch.utils.data.Dataloader实现。&lt;/p&gt;

&lt;p&gt;这提供了巨大的便利，避免重复造轮子。&lt;/p&gt;

&lt;p&gt;对于这个教程，我们使用 CIFAR10数据集。它包含以下类别的图片：‘airplane’, ‘automobile’, ‘bird’, ‘cat’, ‘deer’, ‘dog’, ‘frog’, ‘horse’, ‘ship’, ‘truck’。其中的图片是3x32x32的，即三通道颜色(RGB)，长宽各32像素(pixel)。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/\assets\image\2020-09-26-A-Course-in-Pytorch-4\cifar10.png&quot; alt=&quot;cifar10&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;训练一个分类器&quot;&gt;训练一个分类器=&lt;/h2&gt;

&lt;p&gt;我们将依次进行以下几个步骤：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用torchvision加载并归一化 CIFAR10的训练集(training dataset)和测试集(test dataset)。&lt;/li&gt;
  &lt;li&gt;定义CNN(卷积神经网络, Convolutional Neural Network)&lt;/li&gt;
  &lt;li&gt;定义损失函数&lt;/li&gt;
  &lt;li&gt;在训练集上训练网络&lt;/li&gt;
  &lt;li&gt;在测试集上测试网络&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;loading-and-normalizing-cifar10&quot;&gt;Loading and normalizing CIFAR10&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torchvision&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torchvision.transforms&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transforms&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torchvision&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datasets&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PILImage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;images&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;We&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;them&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Tensors&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;normalized&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;..&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;note&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;If&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;running&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Windows&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;BrokenPipeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setting&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_worker&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transforms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Compose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transforms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToTensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;transforms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Normalize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;trainset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torchvision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CIFAR10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                        &lt;span class=&quot;n&quot;&gt;download&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;trainloader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trainset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                          &lt;span class=&quot;n&quot;&gt;shuffle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_workers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;testset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torchvision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CIFAR10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                       &lt;span class=&quot;n&quot;&gt;download&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;testloader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                         &lt;span class=&quot;n&quot;&gt;shuffle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_workers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'plane'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'car'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'bird'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'cat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;s&quot;&gt;'deer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dog'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'frog'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'horse'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ship'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'truck'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Out&lt;/span&gt;:

&lt;span class=&quot;kd&quot;&gt;Downloading&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;https&lt;/span&gt;://www.cs.toronto.edu/&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;kriz&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;/cifar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;-python&lt;/span&gt;.tar.gz &lt;span class=&quot;kd&quot;&gt;to&lt;/span&gt; ./data/cifar&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;-python&lt;/span&gt;.tar.gz
&lt;span class=&quot;kd&quot;&gt;Extracting&lt;/span&gt; ./data/cifar&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;-python&lt;/span&gt;.tar.gz &lt;span class=&quot;kd&quot;&gt;to&lt;/span&gt; ./data
&lt;span class=&quot;kd&quot;&gt;Files&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;already&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;downloaded&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;verified&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;让我们显示一些图片：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# functions to show an image
&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;# unnormalize
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;npimg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transpose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;npimg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;# get some random training images
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataiter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trainloader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataiter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# show images
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torchvision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# print labels
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'%5s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/\assets\image\2020-09-26-A-Course-in-Pytorch-4\one-pic-in-cifar10.png&quot; alt=&quot;one-pic-in-cifar10&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Out&lt;/span&gt;:

&lt;span class=&quot;kd&quot;&gt;ship&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;bird&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;plane&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;truck&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;定义一个cnn&quot;&gt;定义一个CNN&lt;/h3&gt;

&lt;p&gt;从上一篇文章（神经网络）中复制代码，改动它使能处理3通道图片（之前是1通道）。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch.nn&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch.nn.functional&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Conv2d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MaxPool2d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Conv2d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;84&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;84&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conv2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fc3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;define-a-loss-function-and-optimizer&quot;&gt;Define a Loss function and optimizer&lt;/h3&gt;

&lt;p&gt;用分类的交叉熵来定义损失函数，以及带动量的随机梯度下降法。(Let’s use a Classification Cross-Entropy loss and SGD with momentum.)&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch.optim&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optim&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;criterion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CrossEntropyLoss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SGD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;momentum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Train&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;things&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interesting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;We&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simply&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;over&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;our&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optimize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# loop over the dataset multiple times
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;running_loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trainloader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# get the inputs; data is a list of [inputs, labels]
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# zero the parameter gradients
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero_grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# forward + backward + optimize
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;outputs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;criterion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# print statistics
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;running_loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# print every 2000 mini-batches
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'[%d, %5d] loss: %.3f'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;
                  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;epoch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;running_loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;running_loss&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Finished Training'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Out&lt;/span&gt;:

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;.182
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;4000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.805
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;6000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.645
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;8000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.591
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.515
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;12000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.481
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.411
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;4000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.403
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;6000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.339
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;8000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.356
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.312
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;12000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;loss&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.304
&lt;span class=&quot;kd&quot;&gt;Finished&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;Training&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;保存训练完成的模型。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;n&quot;&gt;PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'./cifar_net.pth'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;更多&lt;a href=&quot;https://pytorch.org/docs/stable/notes/serialization.html&quot;&gt;关于保存的细节&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&quot;test-the-network-on-the-test-data&quot;&gt;Test the network on the test data&lt;/h3&gt;

&lt;p&gt;我们在训练集上训练(train)网络两遍。我们将在测试集上用神经网络预测(predict)图片的分类(label)，和真正分类(ground-truth)对比。如果正确，就把该样本(sample)加入正确预测的列表里。这样就能看出神经网络是否真的学到了什么。&lt;/p&gt;

&lt;p&gt;展示测试集的一张图。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dataiter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;testloader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataiter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# print images
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imshow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torchvision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;make_grid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'GroundTruth: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'%5s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-A-Course-in-Pytorch-4/one-pic-in-test.png&quot; alt=&quot;one-pic-in-test&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Out&lt;/span&gt;:

&lt;span class=&quot;kd&quot;&gt;GroundTruth&lt;/span&gt;:    &lt;span class=&quot;kd&quot;&gt;cat&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;ship&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;ship&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;plane&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;我们加载训练好的模型（并非必要，只是展示加载方法）：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_state_dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;现在预测：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;outputs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;输出是图片在10类上的能量(机率)，因此取最高作为预测分类：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;predicted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Predicted: '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'%5s'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predicted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
                              &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Out&lt;/span&gt;:

&lt;span class=&quot;kd&quot;&gt;Predicted&lt;/span&gt;:    &lt;span class=&quot;kd&quot;&gt;cat&lt;/span&gt;   &lt;span class=&quot;kd&quot;&gt;car&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;plane&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;plane&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;看起来不错。下面在整个测试集上预测。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;correct&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;no_grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testloader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;outputs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;predicted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;correct&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predicted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Accuracy of the network on the 10000 test images: %d %%'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;correct&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Out&lt;/span&gt;:

&lt;span class=&quot;kd&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10000&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;images&lt;/span&gt;: &lt;span class=&quot;m&quot;&gt;54&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这看起来比随机选择要好，神经网络确实学到了东西。&lt;/p&gt;

&lt;p&gt;下面看看在各个类上的预测表现。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;class_correct&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;class_total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;no_grad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testloader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;outputs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;predicted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predicted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;squeeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;class_correct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;class_total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Accuracy of %5s : %2d %%'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class_correct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;class_total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Out&lt;/span&gt;:

&lt;span class=&quot;kd&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;plane&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;63&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;of&lt;/span&gt;   &lt;span class=&quot;kd&quot;&gt;car&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;69&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;of&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;bird&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;51&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;of&lt;/span&gt;   &lt;span class=&quot;kd&quot;&gt;cat&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;46&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;of&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;deer&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;34&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;of&lt;/span&gt;   &lt;span class=&quot;kd&quot;&gt;dog&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;of&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;frog&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;70&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;horse&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;53&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;of&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;ship&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;57&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;truck&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;53&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;training-on-gpu&quot;&gt;Training on GPU&lt;/h3&gt;

&lt;p&gt;就像把一个张量转移到GPU，我们可以把整个网络转移。&lt;/p&gt;

&lt;p&gt;我们先定义GPU设备为第一个可见GPU设备（0号设备），如果cuda可用。&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cuda:0&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cuda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;cpu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Assuming that we are on a CUDA machine, this should print a CUDA device:
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bat highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;Out&lt;/span&gt;:

&lt;span class=&quot;kd&quot;&gt;cuda&lt;/span&gt;:0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;之后默认使用这个设备。&lt;/p&gt;

&lt;p&gt;这些函数会递归地把所有变量和缓存转移到设备上：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;同样，每步的输入和目标也要转移：&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;对比cpu为啥看不出加速效果&quot;&gt;对比CPU，为啥看不出加速效果？&lt;/h3&gt;

&lt;p&gt;你的网络太小了。&lt;/p&gt;

&lt;p&gt;一个练习：增加网络的宽度(width) (第一个nn.Conv2d的参数2,和第二个Conv2d的参数1——它们是相同的数)，看看加速效果。&lt;/p&gt;

&lt;p&gt;现在，教程的目的达到了：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;整体上理解pytorch的张量库和神经网络。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;训练一个小网络来分类图片。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;多gpu训练&quot;&gt;多GPU训练&lt;/h3&gt;

&lt;p&gt;详见&lt;a href=&quot;https://pytorch.org/tutorials/beginner/blitz/data_parallel_tutorial.html&quot;&gt;Data Parallelism&lt;/a&gt;.&lt;/p&gt;</content><author><name>rym</name></author><summary type="html">Pytorch 入门 本文翻译自pytorch官方教程DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ，共四篇。 这是第四篇TRAINING A CLASSIFIER.</summary></entry><entry><title type="html">A course in pytorch</title><link href="http://localhost:4000/2020/09/26/A-Course-in-Pytorch.html" rel="alternate" type="text/html" title="A course in pytorch" /><published>2020-09-26T00:00:00+08:00</published><updated>2020-09-26T00:00:00+08:00</updated><id>http://localhost:4000/2020/09/26/A%20Course%20in%20Pytorch</id><content type="html" xml:base="http://localhost:4000/2020/09/26/A-Course-in-Pytorch.html">&lt;h1 id=&quot;pytorch-入门&quot;&gt;Pytorch 入门&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文翻译自pytorch官方教程&lt;a href=&quot;https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html&quot;&gt;DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ&lt;/a&gt;，共四篇。
这是第一篇What is Pytorch?.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;教程目标：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;在整体上理解Pytorch的Tensor(张量)库和神经网络(neural networks)。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;训练一个小型神经网络来分类图片。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个教程假设读者对numpy有基本了解。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;what-is-pytorch什么是-pytorch&quot;&gt;WHAT IS PYTORCH?什么是 PyTorch?&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;什么是-pytorch&quot;&gt;什么是 PyTorch?&lt;/h1&gt;

&lt;p&gt;这是一个针对以下两种需求的基于 Python 科学计算软件包：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;替代 NumPy 来发挥 GPU 的性能&lt;/li&gt;
  &lt;li&gt;提供最大便捷以及速度的深度学习研究平台&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;开始&quot;&gt;开始&lt;/h2&gt;

&lt;h3 id=&quot;tensors&quot;&gt;Tensors&lt;/h3&gt;

&lt;p&gt;Tensors 与 NumPy 中的 ndarrays 类似, 另外 Tensors 可以使用 GPU 来加速计算.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;__future__&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print_function&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;torch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;alert alert-info&quot;&gt;&lt;h4&gt;Note&lt;/h4&gt;&lt;p&gt;当矩阵被声明却未进行初始化，
    在它被使用之前，我们都不能确定矩阵中元素的值. 
    当一个未被初始化的矩阵被创建时,被分配到矩阵的内存
    中存储的值就是矩阵的初始值.&lt;/p&gt;&lt;/div&gt;

&lt;p&gt;创建一个 5x3 的矩阵, 未进行初始化:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建一个随机初始化的矩阵:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建一个数据类型为 long 的元素全部为 0 的矩阵:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;long&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;直接使用数据创建 tensor:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;或者根据已有的 tensor 来创建新的 tensor. 这些方法会反复用到参数的属性， 例如 dtype， 除非值由用户提供.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;      &lt;span class=&quot;c1&quot;&gt;# new_* methods take in sizes
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randn_like&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# override dtype!
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                                      &lt;span class=&quot;c1&quot;&gt;# result has the same size
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;获得它的大小:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;alert alert-info&quot;&gt;&lt;h4&gt;Note&lt;/h4&gt;&lt;p&gt;``torch.Size`` 实际上是一个 tuple(元组), 所以它支持所有的 tuple 操作.&lt;/p&gt;&lt;/div&gt;

&lt;h3 id=&quot;运算&quot;&gt;运算&lt;/h3&gt;

&lt;p&gt;针对运算有不同的语法. 在下面的例子中, 我们会涉及加法运算.&lt;/p&gt;

&lt;p&gt;加法: 语法 1&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;加法: 语法 2&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;加法: 将运算结果作为参数&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;加法: in-place(原地操作符:不经过复制操作，而是直接在原来的内存上改变它的值.)&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# adds x to y
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;alert alert-info&quot;&gt;&lt;h4&gt;Note&lt;/h4&gt;&lt;p&gt;任何使用 in-place 来改变 tensor 的操作都会在后面加上 ``_``.
    例如: ``x.copy_(y)``, ``x.t_()``, 会改变 ``x``.&lt;/p&gt;&lt;/div&gt;

&lt;p&gt;你可以使用各种标准 NumPy 风格的索引!&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;调整大小: 如果你想要 resize/reshape(调整大小或改变形状) tensor， 你可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;torch.view&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# the size -1 is inferred from other dimensions
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;对于只含一个元素的 tensor, 使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.item()&lt;/code&gt; 来得到它的数值&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;randn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Read later:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;100+ Tensor 操作, 包括转置， 索引，切片，数学运算， 线性代数， 随机数等等,
  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;here &amp;lt;https://pytorch.org/docs/torch&amp;gt;&lt;/code&gt;_.&lt;/p&gt;

&lt;h2 id=&quot;numpy-bridge&quot;&gt;NumPy Bridge&lt;/h2&gt;

&lt;p&gt;将 Tensor 转化为 NumPy 中的数组类型或者将数组转化为 Tensor 都是非常简单的.&lt;/p&gt;

&lt;p&gt;Torch 中的 tensor 与 NumPy 中的数组会共享底层的内存（如果 tensor 在 CPU 上）， 
且改变其中一个另一个也会改变.&lt;/p&gt;

&lt;h3 id=&quot;将-tensor-转化为-numpy-中的数组类型&quot;&gt;将 Tensor 转化为 NumPy 中的数组类型&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;numpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;NumPy 中的数组如何改变值.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;将-numpy-的数组转化为-torch-中的-tensor&quot;&gt;将 NumPy 的数组转化为 Torch 中的 tensor&lt;/h3&gt;

&lt;p&gt;数组如何自动转化为 tensor&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;numpy&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_numpy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;除了 CharTensor 所有在 CPU 上的 tensor 都支持在数组之间的转换.&lt;/p&gt;

&lt;h2 id=&quot;cuda-tensors&quot;&gt;CUDA Tensors&lt;/h2&gt;
&lt;p&gt;通过使用 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.to&lt;/code&gt; Tensors 可以移动到任何设备上.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# let us run this cell only if CUDA is available
# We will use ``torch.device`` objects to move tensors in and out of GPU
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cuda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cuda&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;          &lt;span class=&quot;c1&quot;&gt;# a CUDA device object
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ones_like&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# directly create a tensor on GPU
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;                       &lt;span class=&quot;c1&quot;&gt;# or just use strings ``.to(&quot;cuda&quot;)``
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cpu&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;torch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;       &lt;span class=&quot;c1&quot;&gt;# ``.to`` can also change dtype together!
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>vjy</name></author><summary type="html">Pytorch 入门 本文翻译自pytorch官方教程DEEP LEARNING WITH PYTORCH: A 60 MINUTE BLITZ，共四篇。 这是第一篇What is Pytorch?. 教程目标： 在整体上理解Pytorch的Tensor(张量)库和神经网络(neural networks)。 训练一个小型神经网络来分类图片。 这个教程假设读者对numpy有基本了解。</summary></entry><entry><title type="html">Os</title><link href="http://localhost:4000/2020/09/26/OS.html" rel="alternate" type="text/html" title="Os" /><published>2020-09-26T00:00:00+08:00</published><updated>2020-09-26T00:00:00+08:00</updated><id>http://localhost:4000/2020/09/26/OS</id><content type="html" xml:base="http://localhost:4000/2020/09/26/OS.html">&lt;h1 id=&quot;现代操作系统&quot;&gt;现代操作系统&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文节选自《现代操作系统，第四版/Modern Operating System, 4th ed》，1.1-1.5节。
本文只保留主干框架，详情阅读原文。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;基本介绍&quot;&gt;基本介绍&lt;/h2&gt;

&lt;p&gt;现代操作系统由一个或者多个处理器、主存、磁盘、打印机、键盘 、鼠标、显示器、网络接口以及各种其他输入输出设备组成。计算机安装了一个复杂的系统，为用户程序提供一个更好 、更简单、更清晰的计算机模型，并管理刚才提到的所有设备。&lt;/p&gt;

&lt;p&gt;用户与之交互的程序，基于文本的通常称为shell，而基于图标的则称为图形用户界面(Graphical User Interface, GUI)，它们实际上并不是操作系统的一部分，尽管这些程序使用操作系统来完成工作。&lt;/p&gt;

&lt;p&gt;操作系统有两个基本上独立的任务，即为应用程序提供一个资源集的清晰抽象，并管理这些硬件资源。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-OS/image1-1.png&quot; alt=&quot;操作系统所处的位置&quot; title=&quot;操作系统所处的位置&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;作为扩展机器的操作系统&quot;&gt;作为扩展机器的操作系统&lt;/h2&gt;

&lt;p&gt;在机器语言一级上，多数计算机的体系结构（指令集、存储组织、I/O和总线结构）是很原始的，而且编程是很困难的，尤其对输入/输出操作而言。为了更细致地考察这一点，我们以大多数电脑使用的更现代非SATA(Serial ATA)硬盘为例。曾有一本描述早期硬盘接口（程序员为了使用硬盘而需要了解的东西）的书（Anderson,2007）它的页数超过450页。自2007年起，接口又被修改个很多次，因而比当时更加复杂。显然，没有任何理智的程序员想要在硬件层面上和硬盘打交道。相反，他们使用一些叫作硬盘驱动（disk driver）的软件和硬件交互。这类软件提供了读写硬盘块的接口，而不同深入细节。操作系统包含花很多用于控制输入输出设备的驱动。&lt;/p&gt;

&lt;p&gt;但就算是在这个层面上，对于大多数应用来说还是太底层了。因此，所有操作系统都提供使用硬盘的又一层抽象：文件。使用该抽象，程序能创建、读写文件，而不用处理硬件实际工作中那些恼人的细节。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-OS/image1-2.png&quot; alt=&quot;操作系统将丑陋的硬件转变成为美丽的抽象&quot; title=&quot;操作系统将丑陋的硬件转变成为美丽的抽象&quot; /&gt;&lt;/p&gt;

&lt;p&gt;需要指出的是，操作系统的实际客户是应用程序（当然是通过应用程序员）。它们直接与操作系统及其抽象打交道。相反，最终用户与用户接口所提供的抽象打交道，或者是命令行shell或者是图形接口。而用户接口的抽象可以与操作系统提供的抽象类似，但也不总是这样。为了更清晰地说明这一点，请读者考虑普道的Windows桌面以及面向行的命令提示符。两者都是运行在Windows操作系统上的程序，并使用了Windows提供的抽象，但是它们提供了非常不同的用户接口。类似地，运行Gnome或者KDE的Linux用户与直接在xWindow系统（面向文本）顶部工作的Linux用户看到的是非常不同的界面，但是在这两种情形中，操作系统下面的抽象是相同的。&lt;/p&gt;

&lt;h2 id=&quot;作为资源管理的操作系统&quot;&gt;作为资源管理的操作系统&lt;/h2&gt;

&lt;p&gt;把操作系统看作向应用程序提供基本抽象的溉念，是一种自顶向下的观点。按照另一种自底向上的观点，操作系统则用来管理一个复杂系统的各个部分。现代计算机包含处理器、存储器、时钟、磁盘、鼠标、网络接口、打印机以及许多其他设备。从这个角度看，操作系统的任务是在相互竞争的程序之间有序地控制对处理器、存储器以及其他]/O接口设备的分配。&lt;/p&gt;

&lt;p&gt;现代操作系统允许同时在内存中运行多道程序。假设在一台计算机上运行的三个程序试图同时在同一台打印机上输出计算结果，那么开始的几行可能是程序1的輪出，接着几行是程序2的输出，然后又是程序3的输出等，最终结果将是一团槽。采用将打印结果送到磁盘上缓冲区的方法，操作系统可以把潜在的混乱有序化。在一个程序结束后，操作系统可以将暂存在磁盘上的文件送到打印机输出，同时其他程序可以继续产生更多的输出结果，很明显，这些程序的输出还没有真正送至打印机。&lt;/p&gt;

&lt;p&gt;当一个计算机（或网络）有多个用户时，管理和保护存储器、I/O设备以及其他资源的需求变得强烈起来，因为用户间可能会互相干扰。另外，用户通常不仅共享硬件，还要共享信息（文件、数据库等）。简而言之，操作系统的这种观点认为，操作系统的主要任务是记录哪个程序在使用什么资源，对资源请求进行分配，评估使用代价，并且为不同的程序和用户调解互相冲突的资源请求。&lt;/p&gt;

&lt;p&gt;资源管理包括用以下两种不同方式实现多路复用（共享）资源：在时间上复用和在空间上复用。当一种资源在时间上复用时，不同的程序或用户轮流使用它·先是第一个获得资源的使用，然后下一个，以此类推。例如，若在系统中只有一个CPU，而多个程序需要在该CPU上运行，操作系统则首先把该CPU分配给某个程序，在它运行了足够长的时间之后，另一个程序得到CPU，然后是下一个，如此进行下去，最终，轮到第一个程序再次运行。至于资源是如何实现时间复用的一一谁应该是下一个以及运行多长时间等一一则是操作系统的任务。还有一个有关时间复用的例子是打印机的共享。当多个打印作业
在一台打印机上排队等待打印时，必須决定将轮到打印的是哪个作业。&lt;/p&gt;

&lt;p&gt;另一类复用是空间复用。每个客户都得到资源的一部分，从而取代了客户排队。例如，通常在若干运行程序之间分割内存，这样每一个运行程序都可同时人驻内存（例如，为了轮流使用CPU）。假设有足够的内存可以存放多个程序，那么在内存中同时存放若干个程序的效率，比把所有内存都分给一个程序的效率要高得多，特别是，如果一个程序只需要整个内存的一小部分，结果更是这样心当然，如此的做法会引起公平、保护等问题，这有赖于操作系统解决它们。有关空间复用的其他资源还有磁盘。在许多系统中，一个磁盘同时为许多用户保存文件。分配磁盘空间并记录谁正在使用哪个磁盘块，是操作系统的典型任务。&lt;/p&gt;

&lt;h2 id=&quot;操作系统的历史&quot;&gt;操作系统的历史&lt;/h2&gt;

&lt;h3 id=&quot;第一代1945-1955真空管和穿孔卡片&quot;&gt;第一代(1945-1955)：真空管和穿孔卡片&lt;/h3&gt;

&lt;h3 id=&quot;第二代1955-1965晶体管和批处理系统&quot;&gt;第二代（1955-1965）：晶体管和批处理系统&lt;/h3&gt;

&lt;h3 id=&quot;第三代1965-1980集成电路和多道程序设计&quot;&gt;第三代(1965-1980)：集成电路和多道程序设计&lt;/h3&gt;

&lt;h3 id=&quot;第四代1980-个人计算机&quot;&gt;第四代(1980-)：个人计算机&lt;/h3&gt;

&lt;h3 id=&quot;第五代1990-移动计算机&quot;&gt;第五代（1990-）：移动计算机&lt;/h3&gt;

&lt;h2 id=&quot;计算机硬件简介&quot;&gt;计算机硬件简介&lt;/h2&gt;

&lt;p&gt;从概念上讲，一台简单的个人计算机可以抽象为类似于图1．6中的模型。CPU、内存以及I/O设备都由一条系统总线连接起来并通过总线与其他设备通信。现代个人计算机结构更加复杂，包含多重总线，我们将在后面讨论。目前，这一模式还是够用的。在下面各小节中，我们将简要地介绍这些部件，并且讨论一些操作系统设计师所考虑的硬件问题。毫无疑问，这是一个非常简要的概括介绍。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-26-OS/image1-6.png&quot; alt=&quot;简单个人计算机中的一些部件&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;处理器&quot;&gt;处理器&lt;/h3&gt;

&lt;h3 id=&quot;存储器&quot;&gt;存储器&lt;/h3&gt;

&lt;h3 id=&quot;磁盘&quot;&gt;磁盘&lt;/h3&gt;

&lt;h3 id=&quot;io设备&quot;&gt;I/O设备&lt;/h3&gt;

&lt;h3 id=&quot;总线&quot;&gt;总线&lt;/h3&gt;

&lt;h2 id=&quot;操作系统大观园&quot;&gt;操作系统大观园&lt;/h2&gt;

&lt;h3 id=&quot;大型机操作系统&quot;&gt;大型机操作系统&lt;/h3&gt;

&lt;p&gt;在操作系统的高端是用于大型机的操作系统，这些房间般大小的计算机仍然可以在一些大型公司的数据中心见到。这些计算机与个人计算机的主要差别是其I/O处理能力。一台拥有1000个磁盘和几百万吉字节数据的大型机是很正常的，如果有这样一台个人计算机朋友会很羡慕。大型机也在高端的web服务器、大型电子商务服务站点和事务一事务交易服务器上有某种程度的卷土重来。&lt;/p&gt;

&lt;p&gt;用于大型机的操作系统主要面向多个作业的同时处理，多数这样的作业需要巨大的I/O能力。系统主要提供三类服务：批处理、事务处理和分时。批处理系统处理不需要交互式用户干预的周期性作业。保险公司的索赔处理或连锁商店的销售报告通常就是以批处理方式完成的。事务处理系统负责大量小的请求，例如，银行的支票处理或航班预订。每个业务量都很小，但是系统老须每秒处理成百上千个业务。分时系统允许多个远程用户同时在计算机上运行作业一，如在大型数据库上的查询。这些功能是密切相关的，大型机操作系统通常完成所有这些功能。大型机操作系统的一个例子是OS／390（OS/360的后继版本）。但是，大型机操作系统正在逐渐被诸如Linux这类UNIX的变体所替代。&lt;/p&gt;

&lt;h3 id=&quot;服务器操作系统&quot;&gt;服务器操作系统&lt;/h3&gt;

&lt;p&gt;下一个层次是服务器操作系统。它们在服务器上运行，服务器可以是大型的个人计算机、工作站，甚至是大型机。它们通过网络同时为若干个用户服务，并且允许用户共享硬件和软件资源。服务器可提供打印服务、文件服务或Web服务。Internet提供商运行着许多台服务器机器，为用户提供支持，使Web站点保存Web页面并处理进来的请求。典型的服务器操作系统有Solaris、FreeBSD、Linux和WindowsServer201x。&lt;/p&gt;

&lt;h3 id=&quot;多处理器操作系统&quot;&gt;多处理器操作系统&lt;/h3&gt;

&lt;h3 id=&quot;个人计算机操作系统&quot;&gt;个人计算机操作系统&lt;/h3&gt;

&lt;h3 id=&quot;掌上计算机机操作系统&quot;&gt;掌上计算机机操作系统&lt;/h3&gt;

&lt;h3 id=&quot;嵌入式操作系统&quot;&gt;嵌入式操作系统&lt;/h3&gt;

&lt;h3 id=&quot;传感器节点操作系统&quot;&gt;传感器节点操作系统&lt;/h3&gt;

&lt;h3 id=&quot;实时操作系统&quot;&gt;实时操作系统&lt;/h3&gt;

&lt;h3 id=&quot;智能卡操作系统&quot;&gt;智能卡操作系统&lt;/h3&gt;

&lt;h2 id=&quot;操作系统概念&quot;&gt;操作系统概念&lt;/h2&gt;

&lt;h3 id=&quot;进程&quot;&gt;进程&lt;/h3&gt;

&lt;h3 id=&quot;地址空间&quot;&gt;地址空间&lt;/h3&gt;

&lt;h3 id=&quot;文件&quot;&gt;文件&lt;/h3&gt;

&lt;h3 id=&quot;输入输出&quot;&gt;输入输出&lt;/h3&gt;

&lt;h3 id=&quot;保护&quot;&gt;保护&lt;/h3&gt;

&lt;h3 id=&quot;shell&quot;&gt;shell&lt;/h3&gt;</content><author><name>rym</name></author><summary type="html">现代操作系统 本文节选自《现代操作系统，第四版/Modern Operating System, 4th ed》，1.1-1.5节。 本文只保留主干框架，详情阅读原文。</summary></entry><entry><title type="html">Pim, python in math</title><link href="http://localhost:4000/2020/09/26/PIM,-Python-in-math.html" rel="alternate" type="text/html" title="Pim, python in math" /><published>2020-09-26T00:00:00+08:00</published><updated>2020-09-26T00:00:00+08:00</updated><id>http://localhost:4000/2020/09/26/PIM,%20Python%20in%20math</id><content type="html" xml:base="http://localhost:4000/2020/09/26/PIM,-Python-in-math.html">&lt;h1 id=&quot;用python做数值计算&quot;&gt;用python做数值计算&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;本文用到的module有numpy,scipy,matplotlib.
本文包含多个教程，收集自互联网。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;h2 id=&quot;快速入门教程&quot;&gt;&lt;a href=&quot;https://www.numpy.org.cn/user/quickstart.html&quot;&gt;快速入门教程&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;来自numpy中文网。&lt;/p&gt;

&lt;h2 id=&quot;vectors-matrices-and-least-squares&quot;&gt;&lt;a href=&quot;https://ses.library.usyd.edu.au/handle/2123/21370&quot;&gt;Vectors, Matrices, and Least Squares&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;从线性代数的角度，综合介绍了“有用”的函数和语法。&lt;/p&gt;

&lt;h2 id=&quot;runooborg&quot;&gt;Runoob.org&lt;/h2&gt;

&lt;h3 id=&quot;numpy教程&quot;&gt;&lt;a href=&quot;https://www.runoob.com/numpy/numpy-tutorial.html&quot;&gt;NumPy教程&lt;/a&gt;&lt;/h3&gt;

&lt;h3 id=&quot;matplotlib教程&quot;&gt;&lt;a href=&quot;https://www.runoob.com/w3cnote/matplotlib-tutorial.html&quot;&gt;Matplotlib教程&lt;/a&gt;&lt;/h3&gt;

&lt;h2 id=&quot;scipy-docs&quot;&gt;&lt;a href=&quot;https://www.scipy.org/docs.html&quot;&gt;SciPy Docs&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;官方文档，页面包括:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Numpy: 矩阵运算&lt;/li&gt;
  &lt;li&gt;Scipy: 科学计算&lt;/li&gt;
  &lt;li&gt;Matplotlib: 绘图&lt;/li&gt;
  &lt;li&gt;SymPy: 符号计算&lt;/li&gt;
  &lt;li&gt;pandas: 数据处理&lt;/li&gt;
&lt;/ul&gt;</content><author><name>rym</name></author><summary type="html">用python做数值计算 本文用到的module有numpy,scipy,matplotlib. 本文包含多个教程，收集自互联网。</summary></entry><entry><title type="html">从零开始的python生活</title><link href="http://localhost:4000/2020/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84python%E7%94%9F%E6%B4%BB.html" rel="alternate" type="text/html" title="从零开始的python生活" /><published>2020-09-26T00:00:00+08:00</published><updated>2020-09-26T00:00:00+08:00</updated><id>http://localhost:4000/2020/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84python%E7%94%9F%E6%B4%BB</id><content type="html" xml:base="http://localhost:4000/2020/09/26/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84python%E7%94%9F%E6%B4%BB.html">&lt;h1 id=&quot;从零开始的python生活&quot;&gt;从零开始的python生活&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://www.runoob.com/python3/python3-tutorial.html&quot;&gt;runoob.org,python3 教程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;p&gt;Runoob.org是一家计算机入门教程网站，纯中文，质量机佳。&lt;/p&gt;

&lt;p&gt;有兴趣的同学可以看看其中的&lt;a href=&quot;https://www.runoob.com/markdown/md-tutorial.html&quot;&gt;markdown教程&lt;/a&gt;。本网页就是用jekyll+markdown编写的。&lt;/p&gt;</content><author><name>rym</name></author><summary type="html">从零开始的python生活 runoob.org,python3 教程</summary></entry><entry><title type="html">Draft</title><link href="http://localhost:4000/2020/09/25/draft.htm" rel="alternate" type="text/html" title="Draft" /><published>2020-09-25T00:00:00+08:00</published><updated>2020-09-25T00:00:00+08:00</updated><id>http://localhost:4000/2020/09/25/draft</id><content type="html" xml:base="http://localhost:4000/2020/09/25/draft.htm">&lt;!-- more --&gt;
&lt;body lang=zh-CN style='font-family:Calibri;font-size:14.0pt'&gt;

&lt;div style='direction:ltr;border-width:100%'&gt;

&lt;div style='direction:ltr;margin-top:0in;margin-left:0in;width:7.2736in'&gt;

 &lt;p style='margin:0in;font-family:微软雅黑;font-size:16.0pt;color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;font-family:微软雅黑;font-size:16.0pt;color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h1 style='margin:0in;font-family:微软雅黑;font-size:20.0pt;color:#0080FF'
 lang=yo&gt;资源单&lt;/h1&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span style='text-decoration:underline' lang=zh-CN&gt;现代操作系统&lt;/span&gt;&lt;span
 style='text-decoration:underline' lang=en-US&gt;Modern Operating Systems ,4th&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;Introduction to
 Applied Linear Algebra&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;a href=&quot;https://web.stanford.edu/~boyd/vmls/&quot;&gt;&lt;span lang=yo&gt;https://web.stanford.edu/~boyd/vmls/&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;Vectors,
 Matrices, and Least Squares&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;a href=&quot;https://ses.library.usyd.edu.au/handle/2123/21370&quot;&gt;&lt;span
 lang=yo&gt;https://ses.library.usyd.edu.au/handle/2123/21370&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;python.org&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span style='text-decoration:underline' lang=yo&gt;Python 3.7.2
 Documentation(in IDLE),16 chapters&lt;/span&gt;&lt;span style='text-decoration:underline'
 lang=en-US&gt; tutorial&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;runoob.org&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;A couple of
 HTMLs, light weight&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;a href=&quot;https://www.runoob.com/python3/python3-tutorial.html&quot;&gt;&lt;span
 lang=yo&gt;https://www.runoob.com/python3/python3-tutorial.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;Fluent Python&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span style='text-decoration:underline' lang=en-US&gt;CSDN,&lt;/span&gt;&lt;span
 style='text-decoration:underline' lang=zh-CN&gt;超级详细！&lt;/span&gt;&lt;span
 style='text-decoration:underline' lang=en-US&gt;vscode+anaconda+tensorflow2.0 &lt;/span&gt;&lt;span
 style='text-decoration:underline' lang=zh-CN&gt;搭建机器学习开发环境&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;a
 href=&quot;https://blog.csdn.net/qq_41709360/article/details/103992231&quot;&gt;&lt;span
 lang=yo&gt;https://blog.csdn.net/qq_41709360/article/details/103992231&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin-left:.375in;margin-top:7pt;margin-bottom:0pt;line-height:
 28pt;font-family:微软雅黑;font-size:16.0pt;color:black' lang=yo&gt;&lt;span
 style='text-decoration:underline'&gt;NumPy v1.19 Manual&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;a href=&quot;https://numpy.org/doc/stable/&quot;&gt;&lt;span lang=yo&gt;https://numpy.org/doc/stable/&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;Scipy&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;a href=&quot;https://scipy.org/&quot;&gt;&lt;span lang=yo&gt;https://scipy.org/&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;pytorch.org&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;install pytorch&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:1.125in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;a href=&quot;https://pytorch.org/get-started/locally/&quot;&gt;&lt;span lang=yo&gt;https://pytorch.org/get-started/locally/&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;DEEP LEARNING
 WITH PYTORCH: A 60 MINUTE BLITZ&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:1.125in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;a
 href=&quot;https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html&quot;&gt;&lt;span
 lang=yo&gt;https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:1.125in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'
 lang=yo&gt;&lt;span style='text-decoration:underline;background:white'&gt;MATH6001-106
 Nonlinear Optimization in Machine Learning at Missouri S&amp;amp;T in Spring-2020&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:14.0pt'&gt;&lt;a
 href=&quot;https://github.com/huwenqing0606/MATH6001-106-Nonlinear-Optimization-Spring-2020&quot;&gt;&lt;span
 lang=yo&gt;https://github.com/huwenqing0606/MATH6001-106-Nonlinear-Optimization-Spring-2020&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;font-family:微软雅黑;font-size:14.0pt' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:1.125in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h1 style='margin:0in;font-family:微软雅黑;font-size:20.0pt;color:#0080FF'
 lang=yo&gt;讲义结构&lt;/h1&gt;
 &lt;p style='margin:0in;font-family:微软雅黑;font-size:16.0pt;color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h2 style='margin:0in;font-family:微软雅黑;font-size:18.0pt;color:#4AA5FF'
 lang=yo&gt;服务器基础&lt;/h2&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span style='text-decoration:underline' lang=zh-CN&gt;现代操作系统&lt;/span&gt;&lt;span
 style='text-decoration:underline' lang=en-US&gt;p&lt;/span&gt;&lt;span lang=en-US&gt;1-46&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;History &lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;Hardware&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=en-US&gt;O&lt;/span&gt;&lt;span lang=yo&gt;perating system&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h2 style='margin:0in;font-family:微软雅黑;font-size:18.0pt;color:#4AA5FF'&gt;&lt;span
 lang=en-US&gt;python &lt;/span&gt;&lt;span lang=zh-CN&gt;基础&lt;/span&gt;&lt;/h2&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;环境搭建&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span style='text-decoration:underline' lang=en-US&gt;CSDN,&lt;/span&gt;&lt;span
 style='text-decoration:underline' lang=zh-CN&gt;超级详细！&lt;/span&gt;&lt;span
 style='text-decoration:underline' lang=en-US&gt;vscode+anaconda+tensorflow2.0 &lt;/span&gt;&lt;span
 style='text-decoration:underline' lang=zh-CN&gt;搭建机器学习开发环境&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;install pytorch&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;font-family:微软雅黑;font-size:16.0pt;color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;零基础&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span style='text-decoration:underline' lang=en-US&gt;runoob.org,
 python3 &lt;/span&gt;&lt;span style='text-decoration:underline' lang=zh-CN&gt;教程&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;高级&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span style='text-decoration:underline' lang=yo&gt;Python 3.7.2
 Documentation(in IDLE),16 chapters&lt;/span&gt;&lt;span style='text-decoration:underline'
 lang=en-US&gt; tutorial&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;Fluent Python&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h2 style='margin:0in;font-family:微软雅黑;font-size:18.0pt;color:#4AA5FF'
 lang=yo&gt;numpy, scipy, matplotlib,pytorch&lt;/h2&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=zh-CN&gt;用到的&lt;/span&gt;&lt;span lang=en-US&gt;scipy,numpy&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span style='text-decoration:underline' lang=zh-CN&gt;Vectors,
 Matrices, and Least Squares&lt;/span&gt;&lt;span style='text-decoration:underline'
 lang=en-US&gt;1-31,ch1-3&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:1.125in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;向量、范数&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span style='text-decoration:underline' lang=zh-CN&gt;Vectors,
 Matrices, and Least Squares&lt;/span&gt;&lt;span style='text-decoration:underline'
 lang=en-US&gt;45-103,ch6-13&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:1.125in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;矩阵（建立、四则、逆）&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:1.125in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;线性方程组&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:1.125in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;最小二乘&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=zh-CN&gt;用到的&lt;/span&gt;&lt;span lang=en-US&gt;pytorch,matplotlib&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;DEEP LEARNING
 WITH PYTORCH: A 60 MINUTE BLITZ&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;高级&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;NumPy v1.19
 Manual&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;Scipy&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:14.0pt'
 lang=yo&gt;&lt;span style='text-decoration:underline;background:white'&gt;MATH6001-106
 Nonlinear Optimization in Machine Learning at Missouri S&amp;amp;T in Spring-2020&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:14.0pt'
 lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h1 style='margin:0in;font-family:微软雅黑;font-size:20.0pt;color:#0080FF'&gt;草稿&lt;/h1&gt;
 &lt;h1 style='margin:0in;font-family:微软雅黑;font-size:20.0pt;color:#0080FF'&gt;现代操作系统&lt;/h1&gt;
 &lt;p style='margin:0in;font-family:微软雅黑;font-size:16.0pt;color:black'&gt;&lt;span
 style='text-decoration:underline' lang=zh-CN&gt;现代操作系统&lt;/span&gt;&lt;span
 style='text-decoration:underline' lang=en-US&gt;Modern Operating Systems ,4th&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;font-family:微软雅黑;font-size:16.0pt;color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h2 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:18.0pt;
 color:#4AA5FF'&gt;基本介绍&lt;/h2&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=zh-CN&gt;现代操作系统由一个或者多个处理器、主存、磁盘、打印机、键盘&lt;/span&gt;&lt;span
 lang=en-US&gt; &lt;/span&gt;&lt;span lang=zh-CN&gt;、鼠标、显示器、网络接口以及各种其他输入输出设备组成。计算机安装了一个复杂的系统，为用户程序提供一个更好&lt;/span&gt;&lt;span
 lang=en-US&gt; &lt;/span&gt;&lt;span lang=zh-CN&gt;、更简单、更清晰的计算机模型，并管理刚才提到的所有设备。&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=zh-CN&gt;用户与之交互的程序，基于文本的通常称为&lt;/span&gt;&lt;span lang=en-US&gt;shell&lt;/span&gt;&lt;span
 lang=zh-CN&gt;，而基于图标的则称为图形用户界面&lt;/span&gt;&lt;span lang=en-US&gt;(Graphical User Interface,
 GUI)&lt;/span&gt;&lt;span lang=zh-CN&gt;，它们实际上并不是操作系统的一部分，尽管这些程序使用操作系统来完成工作。&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;操作系统有两个基本上独立的任务，即为应用程序提供一个资源集的清晰抽象，并管理这些硬件资源。&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image001.png&quot;
 width=442 height=340
 alt=&quot;用 户 态 &amp;#10;电 子 邮 件 音 &amp;#10;阅 读 器 播 放 器 &amp;#10;Webiü* &amp;#10;用 户 接 口 程 序 &amp;#10;操 作 系 统 &amp;#10;图 凵 操 作 系 统 所 处 的 位 置 &amp;#10;件 &quot;&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;作为扩展机器的操作系统&lt;/h3&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=zh-CN&gt;在机器语言一级上，多数计算机的体系结构（指令集、存储组织、&lt;/span&gt;&lt;span
 lang=en-US&gt;I/O&lt;/span&gt;&lt;span lang=zh-CN&gt;和总线结构）是很原始的，而且编程是很困难的，尤其对输入&lt;/span&gt;&lt;span
 lang=en-US&gt;/&lt;/span&gt;&lt;span lang=zh-CN&gt;输出操作而言。为了更细致地考察这一点，我们以大多数电脑使用的更现代非&lt;/span&gt;&lt;span
 lang=en-US&gt;SATA(Serial ATA)&lt;/span&gt;&lt;span lang=zh-CN&gt;硬盘为例。曾有一本描述早期硬盘接口（程序员为了使用硬盘而需要了解的东西）的书（&lt;/span&gt;&lt;span
 lang=en-US&gt;Anderson,2007&lt;/span&gt;&lt;span lang=zh-CN&gt;）它的页数超过&lt;/span&gt;&lt;span
 lang=en-US&gt;450&lt;/span&gt;&lt;span lang=zh-CN&gt;页。自&lt;/span&gt;&lt;span lang=en-US&gt;2007&lt;/span&gt;&lt;span
 lang=zh-CN&gt;年起，接口又被修改个很多次，因而比当时更加复杂。显然，没有任何理智的程序员想要在硬件层面上和硬盘打交道。相反，他们使用一些叫作硬盘驱动（&lt;/span&gt;&lt;span
 lang=en-US&gt;disk driver&lt;/span&gt;&lt;span lang=zh-CN&gt;）的软件和硬件交互。这类软件提供了读写硬盘块的接口，而不同深入细节。操作系统包含花很多用于控制输入输出设备的驱动。&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;但就算是在这个层面上，对于大多数应用来说还是太底层了。因此，所有操作系统都提供使用硬盘的又一层抽象：文件。使用该抽象，程序能创建、读写文件，而不用处理硬件实际工作中那些恼人的细节。&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image002.png&quot;
 width=410 height=350
 alt=&quot;应 用 程 序 &amp;#10;操 作 系 统 &amp;#10;0 ' 00 ． &amp;#10;硬 件 &amp;#10;- 一 美 丽 接 口 &amp;#10;- 一 一 且 陋 接 口 &amp;#10;图 2 操 作 系 统 将 丑 陋 的 硬 件 转 变 为 美 丽 的 抽 象 &quot;&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=en-US&gt;&lt;span style='mso-spacerun:yes'&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span
 lang=zh-CN&gt;需要指出的是，操作系统的实际客户是应用程序（当然是通过应用程序员）。它们直接与操作系统及其抽象打交道。相反，最终用户与用户接口所提供的抽象打交道，或者是命令行shell或者是图形接口。而用户接口的抽象可以与操作系统提供的抽象类似，但也不总是这样。为了更清晰地说明这一点，请读者考虑普道的Windows桌面以及面向行的命令提示符。两者都是运行在Windows操作系统上的程序，并使用了Windows提供的抽象，但是它们提供了非常不同的用户接口。类似地，运行Gnome或者KDE的Linux用户与直接在xWindow系统（面向文本）顶部工作的Linux用户看到的是非常不同的界面，但是在这两种情形中，操作系统下面的抽象是相同的。&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;作为资源管理的操作系统&lt;/h3&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=en-US&gt;&lt;span style='mso-spacerun:yes'&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span
 lang=zh-CN&gt;把操作系统看作向应用程序提供基本抽象的溉念，是一种自顶向下的观点。按照另一种自底向上的观点，操作系统则用来管理一个复杂系统的各个部分。现代计算机包含处理器、存储器、时钟、磁盘、鼠标、网络接口、打印机以及许多其他设备。从这个角度看，操作系统的任务是在相互竞争的程序之间有序地控制对处理器、存储器以及其他]/O接口设备的分配。&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=en-US&gt;&lt;span style='mso-spacerun:yes'&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span
 lang=zh-CN&gt;现代操作系统允许同时在内存中运行多道程序。假设在一台计算机上运行的三个程序试图同时在同一台打印机上输出计算结果，那么开始的几行可能是程序1的輪出，接着几行是程序2的输出，然后又是程序3的输出等，最终结果将是一团槽。采用将打印结果送到磁盘上缓冲区的方法，操作系统可以把潜在的混乱有序化。在一个程序结束后，操作系统可以将暂存在磁盘上的文件送到打印机输出，同时其他程序可以继续产生更多的输出结果，很明显，这些程序的输出还没有真正送至打印机。&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=en-US&gt;&lt;span style='mso-spacerun:yes'&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span
 lang=zh-CN&gt;当一个计算机（或网络）有多个用户时，管理和保护存储器、I/O设备以及其他资源的需求变得强烈起来，因为用户间可能会互相干扰。另外，用户通常不仅共享硬件，还要共享信息（文件、数据库等）。简而言之，操作系统的这种观点认为，操作系统的主要任务是记录哪个程序在使用什么资源，对资源请求进行分配，评估使用代价，并且为不同的程序和用户调解互相冲突的资源请求。&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=en-US&gt;&lt;span style='mso-spacerun:yes'&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span
 lang=zh-CN&gt;资源管理包括用以下两种不同方式实现多路复用（共享）资源：在时间上复用和在空间上复用。当一种资源在时间上复用时，不同的程序或用户轮流使用它·先是第一个获得资源的使用，然后下一个，&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;以此类推。例如，若在系统中只有一个CPU，而多个程序需要在该CPU上运行，操作系统则首先把该CPU分配给某个程序，在它运行了足够长的时间之后，另一个程序得到CPU，然后是下一个，如此进行下去，最终，轮到第一个程序再次运行。至于资源是如何实现时间复用的一一谁应该是下一个以及运行多长时间等一一则是操作系统的任务。还有一个有关时间复用的例子是打印机的共享。当多个打印作业&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;在一台打印机上排队等待打印时，必須决定将轮到打印的是哪个作业。&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=en-US&gt;&lt;span style='mso-spacerun:yes'&gt;    &lt;/span&gt;&lt;/span&gt;&lt;span
 lang=zh-CN&gt;另一类复用是空间复用。每个客户都得到资源的一部分，从而取代了客户排队。例如，通常在若干运行程序之间分割内存，这样每一个运行程序都可同时人驻内存（例如，为了轮流使用CPU）。假设有&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;足够的内存可以存放多个程序，那么在内存中同时存放若干个程序的效率，比把所有内存都分给一个程序的效率要高得多，特别是，如果一个程序只需要整个内存的一小部分，结果更是这样心当然，如此的&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;做法会引起公平、保护等问题，这有赖于操作系统解决它们。有关空间复用的其他资源还有磁盘。在许多系统中，一个磁盘同时为许多用户保存文件。分配磁盘空间并记录谁正在使用哪个磁盘块，是操作系统的典型任务。&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h2 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:18.0pt;
 color:#4AA5FF'&gt;操作系统的历史&lt;/h2&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=zh-CN&gt;第一代&lt;/span&gt;&lt;span lang=en-US&gt;(1945-1955)&lt;/span&gt;&lt;span
 lang=zh-CN&gt;：真空管和穿孔卡片&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;略&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=zh-CN&gt;第二代（&lt;/span&gt;&lt;span lang=en-US&gt;1955-1965&lt;/span&gt;&lt;span
 lang=zh-CN&gt;）：晶体管和批处理系统&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;略&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=zh-CN&gt;第三代&lt;/span&gt;&lt;span lang=en-US&gt;(1965-1980)&lt;/span&gt;&lt;span
 lang=zh-CN&gt;：集成电路和多道程序设计&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;略&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=zh-CN&gt;第四代&lt;/span&gt;&lt;span lang=en-US&gt;(1980-)&lt;/span&gt;&lt;span
 lang=zh-CN&gt;：个人计算机&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;略&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=zh-CN&gt;第五代（&lt;/span&gt;&lt;span lang=en-US&gt;1990-&lt;/span&gt;&lt;span
 lang=zh-CN&gt;）：移动计算机&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;略&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h2 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:18.0pt;
 color:#4AA5FF'&gt;计算机硬件简介&lt;/h2&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;从概念上讲，一台简单的个人计算机可以抽象为类似于图1．6中的模型。CPU、内存以及I/O设备都由一条系统总线连接起来并通过总线与其他设备通信。现代个人计算机结构更加复杂，包含多重总线，我们将在后面讨论。目前，这一模式还是够用的。在下面各小节中，我们将简要地介绍这些部件，并且讨论一些操作系统设计师所考虑的硬件问题。毫无疑问，这是一个非常简要的概括介绍。&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image003.png&quot;
 width=650 height=357
 alt=&quot;监 视 器 &amp;#10;视 频 &amp;#10;存 储 器 &amp;#10;控 制 器 &amp;#10;键 盘 &amp;#10;键 盘 &amp;#10;控 制 器 &amp;#10;USB &amp;#10;打 印 机 &amp;#10;USB &amp;#10;控 制 器 &amp;#10;硬 盘 &amp;#10;驱 动 器 &amp;#10;000 &amp;#10;硬 盘 &amp;#10;控 制 器 &amp;#10;总 线 &amp;#10;图 1 ． 6 简 单 个 人 计 算 机 中 的 一 些 部 件 &quot;&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;处理器&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;存储器&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;磁盘&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=en-US&gt;I/O&lt;/span&gt;&lt;span lang=zh-CN&gt;设备&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;总线&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h2 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:18.0pt;
 color:#4AA5FF'&gt;操作系统大观园&lt;/h2&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;大型机操作系统&lt;/h3&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;在操作系统的高端是用于大型机的操作系统，这些房间般大小的计算机仍然可以在一些大型公司的数据中心见到。这些计算机与个人计算机的主要差别是其I/O处理能力。一台拥有1000个磁盘和几百万吉字节数据的大型机是很正常的，如果有这样一台个人计算机朋友会很羡慕。大型机也在高端的web服&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;务器、大型电子商务服务站点和事务一事务交易服务器上有某种程度的卷土重来。&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;用于大型机的操作系统主要面向多个作业的同时处理，多数这样的作业需要巨大的I/O能力。系统主要提供三类服务：批处理、事务处理和分时。批处理系统处理不需要交互式用户干预的周期性作业。保险公司的索赔处理或连锁商店的销售报告通常就是以批处理方式完成的。事务处理系统负责大量小的请求，例如，银行的支票处理或航班预订。每个业务量都很小，但是系统老须每秒处理成百上千个业务。分时系统允许多个远程用户同时在计算机上运行作业一，如在大型数据库上的查询。这些功能是密切相关的，大型机操作系统通常完成所有这些功能。大型机操作系统的一个例子是OS／390（OS/360的后继版本）。但是，大型机操作系统正在逐渐被诸如Linux这类UNIX的变体所替代。&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;服务器操作系统&lt;/h3&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=zh-CN&gt;下一个层次是服务器操作系统。它们在服务器上运行，服务器可以是大型的个人计算机、工作站，甚至是大型机。它们通过网络同时为若干个用户服务，并且允许用户共享硬件和软件资源。服务器可提供打印服务、文件服务或Web服务。Internet提供商运行着许多台服务器机器，为用户提供支持，使Web站点保存Web页面并处理进来的请求。典型的服务器操作系统有&lt;/span&gt;&lt;span
 lang=en-US&gt;Solaris&lt;/span&gt;&lt;span lang=zh-CN&gt;、FreeBSD、Linux和WindowsServer201x。&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;多处理器操作系统&lt;/h3&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;个人计算机操作系统&lt;/h3&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;掌上计算机机操作系统&lt;/h3&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;嵌入式操作系统&lt;/h3&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;传感器节点操作系统&lt;/h3&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;实时操作系统&lt;/h3&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;智能卡操作系统&lt;/h3&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h2 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:18.0pt;
 color:#4AA5FF'&gt;操作系统概念&lt;/h2&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;进程&lt;/h3&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;地址空间&lt;/h3&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;文件&lt;/h3&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;输入输出&lt;/h3&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A'&gt;保护&lt;/h3&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A' lang=en-US&gt;shell&lt;/h3&gt;
 &lt;h3 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:#823D0A' lang=en-US&gt;&amp;nbsp;&lt;/h3&gt;
 &lt;h1 style='margin:0in;font-family:微软雅黑;font-size:20.0pt;color:#0080FF'&gt;&lt;span
 lang=en-US&gt;Python&lt;/span&gt;&lt;span lang=zh-CN&gt;基础&lt;/span&gt;&lt;/h1&gt;
 &lt;h2 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:18.0pt;
 color:#4AA5FF'&gt;&lt;span lang=zh-CN&gt;环境搭建：&lt;/span&gt;&lt;span lang=en-US&gt;Anaconda+VS Code&lt;/span&gt;&lt;/h2&gt;
 &lt;ol type=1 style='margin-left:.375in;direction:ltr;unicode-bidi:embed;
  margin-top:0in;margin-bottom:0in;font-family:微软雅黑;font-size:16.0pt;
  font-weight:normal;font-style:normal'&gt;
  &lt;li value=1 style='margin-top:0;margin-bottom:0;vertical-align:middle'&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;安装&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=en-US&gt;VS Code&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;，从官方网站上下载最新版本。&lt;/span&gt;&lt;/li&gt;
  &lt;li style='margin-top:0;margin-bottom:0;vertical-align:middle'&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt'&gt;安装扩展插件&lt;/span&gt;&lt;/li&gt;
 &lt;/ol&gt;
 &lt;p style='margin:0in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image004.png&quot; width=50 height=301
 alt=在这里插入图片描述&gt;&lt;/p&gt;
 &lt;p style='margin:0in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image005.png&quot; width=480 height=66
 alt=在这里插入图片描述&gt;&lt;/p&gt;
 &lt;p style='margin:0in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image006.png&quot; width=480 height=69
 alt=在这里插入图片描述&gt;&lt;/p&gt;
 &lt;p style='margin:0in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image007.png&quot; width=480 height=87
 alt=在这里插入图片描述&gt;&lt;/p&gt;
 &lt;ol type=1 style='margin-left:.375in;direction:ltr;unicode-bidi:embed;
  margin-top:0in;margin-bottom:0in;font-family:微软雅黑;font-size:16.0pt;
  font-weight:normal;font-style:normal'&gt;
  &lt;li value=3 style='margin-top:0;margin-bottom:0;vertical-align:middle'&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;安装&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=en-US&gt;anaconda&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;，官方下载。或使用清华镜像源：&lt;/span&gt;&lt;/li&gt;
 &lt;/ol&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑'&gt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/&quot;&gt;&lt;span
 style='font-size:10.5pt'&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/&lt;/span&gt;&lt;/a&gt;&lt;span
 style='font-size:14.0pt'&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;ol type=1 style='margin-left:.375in;direction:ltr;unicode-bidi:embed;
  margin-top:0in;margin-bottom:0in;font-family:微软雅黑;font-size:16.0pt;
  font-weight:normal;font-style:normal'&gt;
  &lt;li value=4 style='margin-top:0;margin-bottom:0;vertical-align:middle'&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;运行&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=en-US&gt;Anaconda Navigator&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;，点击环境&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=en-US&gt;(Environments)&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;，点击&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=en-US&gt;Create&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;创建新环境。&lt;/span&gt;&lt;/li&gt;
 &lt;/ol&gt;
 &lt;p style='margin:0in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image008.png&quot; width=319
 height=182 alt=在这里插入图片描述&gt;&lt;/p&gt;
 &lt;p style='margin:0in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image009.png&quot; width=480
 height=362 alt=在这里插入图片描述&gt;&lt;/p&gt;
 &lt;ol type=1 style='margin-left:.375in;direction:ltr;unicode-bidi:embed;
  margin-top:0in;margin-bottom:0in;font-family:微软雅黑;font-size:16.0pt;
  font-weight:normal;font-style:normal'&gt;
  &lt;li value=5 style='margin-top:0;margin-bottom:0;vertical-align:middle'&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt'&gt;切换清华镜像作为下载源。&lt;/span&gt;&lt;/li&gt;
 &lt;/ol&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;使用说明：&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin-left:.375in;margin-top:15pt;margin-bottom:7pt;font-family:
 微软雅黑;font-size:22.5pt'&gt;&lt;span style='font-weight:bold'&gt;Anaconda 镜像使用帮助&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin-left:.375in;margin-top:7pt;margin-bottom:9pt;line-height:
 18pt;font-family:微软雅黑;font-size:10.5pt'&gt;Anaconda 是一个用于科学计算的 Python 发行版，支持
 Linux, Mac, Windows, 包含了众多流行的科学计算、数据分析的 Python 包。&lt;/p&gt;
 &lt;p style='margin-left:.375in;margin-top:7pt;margin-bottom:9pt;line-height:
 18pt;font-family:微软雅黑;font-size:10.5pt'&gt;Anaconda 安装包可以到&amp;nbsp;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/&lt;/a&gt;&amp;nbsp;下载。&lt;/p&gt;
 &lt;p style='margin-left:.375in;margin-top:7pt;margin-bottom:9pt;line-height:
 18pt;font-family:微软雅黑'&gt;&lt;span style='font-size:10.5pt'&gt;TUNA 还提供了 Anaconda
 仓库与第三方源（conda-forge、msys2、pytorch等，&lt;/span&gt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/&quot;&gt;&lt;span
 style='font-size:10.5pt'&gt;查看完整列表&lt;/span&gt;&lt;/a&gt;&lt;span style='font-size:10.5pt'&gt;）的镜像，各系统都可以通过修改用户目录下的&amp;nbsp;&lt;/span&gt;&lt;span
 style='font-size:9.45pt'&gt;.condarc&lt;/span&gt;&lt;span style='font-size:10.5pt'&gt;&amp;nbsp;文件。Windows
 用户无法直接创建名为&amp;nbsp;&lt;/span&gt;&lt;span style='font-size:9.45pt'&gt;.condarc&lt;/span&gt;&lt;span
 style='font-size:10.5pt'&gt;&amp;nbsp;的文件，可先执行&amp;nbsp;&lt;/span&gt;&lt;span style='font-size:
 9.45pt'&gt;conda config --set show_channel_urls yes&lt;/span&gt;&lt;span style='font-size:
 10.5pt'&gt;&amp;nbsp;生成该文件之后再修改。&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:9.75pt'&gt;&lt;span
 lang=zh-CN&gt;channels:&lt;/span&gt;&lt;span lang=en-US&gt;&lt;span style='mso-spacerun:yes'&gt; 
 &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑'&gt;&lt;span
 style='font-size:14.0pt' lang=en-US&gt;&lt;span style='mso-spacerun:yes'&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;- defaults&lt;br&gt;
  show_channel_urls: true&lt;br&gt;
  channel_alias: &lt;/span&gt;&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda&quot;&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda&lt;/span&gt;&lt;/a&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;&lt;br&gt;
  default_channels:&lt;br&gt;
  &lt;/span&gt;&lt;span style='font-size:9.75pt' lang=en-US&gt;&lt;span
 style='mso-spacerun:yes'&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style='font-size:9.75pt'
 lang=zh-CN&gt;- &lt;/span&gt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main&quot;&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main&lt;/span&gt;&lt;/a&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;&lt;br&gt;
  &lt;/span&gt;&lt;span style='font-size:9.75pt' lang=en-US&gt;&lt;span
 style='mso-spacerun:yes'&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style='font-size:9.75pt'
 lang=zh-CN&gt;- &lt;/span&gt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free&quot;&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free&lt;/span&gt;&lt;/a&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;&lt;br&gt;
  &lt;/span&gt;&lt;span style='font-size:9.75pt' lang=en-US&gt;&lt;span
 style='mso-spacerun:yes'&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style='font-size:9.75pt'
 lang=zh-CN&gt;- &lt;/span&gt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r&quot;&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r&lt;/span&gt;&lt;/a&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;&lt;br&gt;
  &lt;/span&gt;&lt;span style='font-size:9.75pt' lang=en-US&gt;&lt;span
 style='mso-spacerun:yes'&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style='font-size:9.75pt'
 lang=zh-CN&gt;- &lt;/span&gt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/pro&quot;&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/pro&lt;/span&gt;&lt;/a&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;&lt;br&gt;
  &lt;span style='mso-spacerun:yes'&gt;  &lt;/span&gt;- &lt;/span&gt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2&quot;&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2&lt;/span&gt;&lt;/a&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;&lt;br&gt;
  custom_channels:&lt;br&gt;
  &lt;/span&gt;&lt;span style='font-size:9.75pt' lang=en-US&gt;&lt;span
 style='mso-spacerun:yes'&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style='font-size:9.75pt'
 lang=zh-CN&gt;conda-forge: &lt;/span&gt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud&quot;&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud&lt;/span&gt;&lt;/a&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;&lt;br&gt;
  &lt;/span&gt;&lt;span style='font-size:9.75pt' lang=en-US&gt;&lt;span
 style='mso-spacerun:yes'&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style='font-size:9.75pt'
 lang=zh-CN&gt;msys2: &lt;/span&gt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud&quot;&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud&lt;/span&gt;&lt;/a&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;&lt;br&gt;
  &lt;/span&gt;&lt;span style='font-size:9.75pt' lang=en-US&gt;&lt;span
 style='mso-spacerun:yes'&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style='font-size:9.75pt'
 lang=zh-CN&gt;bioconda: &lt;/span&gt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud&quot;&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud&lt;/span&gt;&lt;/a&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;&lt;br&gt;
  &lt;/span&gt;&lt;span style='font-size:9.75pt' lang=en-US&gt;&lt;span
 style='mso-spacerun:yes'&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style='font-size:9.75pt'
 lang=zh-CN&gt;menpo: &lt;/span&gt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud&quot;&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud&lt;/span&gt;&lt;/a&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;&lt;br&gt;
  &lt;/span&gt;&lt;span style='font-size:9.75pt' lang=en-US&gt;&lt;span
 style='mso-spacerun:yes'&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style='font-size:9.75pt'
 lang=zh-CN&gt;pytorch: &lt;/span&gt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud&quot;&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud&lt;/span&gt;&lt;/a&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;&lt;br&gt;
  &lt;/span&gt;&lt;span style='font-size:9.75pt' lang=en-US&gt;&lt;span
 style='mso-spacerun:yes'&gt;  &lt;/span&gt;&lt;/span&gt;&lt;span style='font-size:9.75pt'
 lang=zh-CN&gt;simpleitk: &lt;/span&gt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud&quot;&gt;&lt;span
 style='font-size:9.75pt' lang=zh-CN&gt;https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin-left:.375in;margin-top:7pt;margin-bottom:9pt;line-height:
 18pt;font-family:微软雅黑;font-size:10.5pt'&gt;即可添加 Anaconda Python 免费仓库。&lt;/p&gt;
 &lt;p style='margin-left:.375in;margin-top:7pt;margin-bottom:9pt;line-height:
 18pt;font-family:微软雅黑'&gt;&lt;span style='font-size:10.5pt'&gt;运行&amp;nbsp;&lt;/span&gt;&lt;span
 style='font-size:9.45pt'&gt;conda clean -i&lt;/span&gt;&lt;span style='font-size:10.5pt'&gt;&amp;nbsp;清除索引缓存，保证用的是镜像站提供的索引。&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin-left:.375in;margin-top:7pt;margin-bottom:9pt;line-height:
 18pt;font-family:微软雅黑'&gt;&lt;span style='font-size:10.5pt'&gt;运行&amp;nbsp;&lt;/span&gt;&lt;span
 style='font-size:9.45pt'&gt;conda create -n myenv numpy&lt;/span&gt;&lt;span
 style='font-size:10.5pt'&gt;&amp;nbsp;测试一下吧。&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p&gt;&lt;cite style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:9.0pt;
 color:#595959'&gt;来自 &amp;lt;&lt;a
 href=&quot;https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/&lt;/a&gt;&amp;gt;
 &lt;/cite&gt;&lt;/p&gt;
 &lt;p&gt;&lt;cite style='margin:0in;font-family:微软雅黑;font-size:9.0pt;color:#595959'&gt;&amp;nbsp;&lt;/cite&gt;&lt;/p&gt;
 &lt;ol type=1 style='margin-left:.375in;direction:ltr;unicode-bidi:embed;
  margin-top:0in;margin-bottom:0in;font-family:微软雅黑;font-size:16.0pt;
  font-weight:normal;font-style:normal'&gt;
  &lt;li value=6 style='margin-top:0;margin-bottom:0;vertical-align:middle'&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;安装&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=en-US&gt;pytorch.&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;根据官网提示选择相应版本。&lt;/span&gt;&lt;/li&gt;
 &lt;/ol&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;&lt;a
 href=&quot;https://pytorch.org/get-started/locally/&quot;&gt;&lt;span lang=en-US&gt;https://pytorch.org/get-started/locally/&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;例如：&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;&lt;span
 style='background:#F3F4F7'&gt;conda install pytorch torchvision cudatoolkit=10.2
 -c pytorch&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;验证安装效果。&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;&lt;span
 lang=zh-CN&gt;进入&lt;/span&gt;&lt;span lang=en-US&gt;Python&lt;/span&gt;&lt;span lang=zh-CN&gt;交互控制台：&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:14.0pt'&gt;&lt;span
 lang=en-US&gt;(1) win+r &lt;/span&gt;&lt;!--[if gte msEquation 12]&gt;&lt;m:oMath xmlns:m=&quot;http://schemas.microsoft.com/office/2004/12/omml&quot;&gt;&lt;m:r&gt;&lt;m:t&gt;→&lt;/m:t&gt;&lt;/m:r&gt;&lt;/m:oMath&gt;&lt;![endif]--&gt;&lt;span
 lang=en-US&gt;&lt;span style='mso-spacerun:yes'&gt; &lt;/span&gt;cmd &lt;/span&gt;&lt;!--[if gte msEquation 12]&gt;&lt;m:oMath xmlns:m=&quot;http://schemas.microsoft.com/office/2004/12/omml&quot;&gt;&lt;m:r&gt;&lt;m:t&gt;→&amp;nbsp;&lt;/m:t&gt;&lt;/m:r&gt;&lt;/m:oMath&gt;&lt;![endif]--&gt;&lt;span
 lang=en-US&gt;python&lt;/span&gt;&lt;![if !msEquation]&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image010.png&quot;
 width=306 height=34&gt;&lt;![endif]&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:14.0pt'
 lang=en-US&gt;(2) IDLE&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:14.0pt'&gt;测试代码：&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:14.0pt'&gt;&lt;span
 style='font-weight:bold;color:black;background:#F3F4F7'&gt;import &lt;/span&gt;&lt;span
 style='color:#555555;background:#F3F4F7'&gt;torch&lt;/span&gt;&lt;span style='color:#212529;
 background:#F3F4F7'&gt;&lt;br&gt;
  x &lt;/span&gt;&lt;span style='font-weight:bold;color:black;background:#F3F4F7'&gt;=&lt;/span&gt;&lt;span
 style='color:#212529;background:#F3F4F7'&gt; torch&lt;/span&gt;&lt;span style='font-weight:
 bold;color:black;background:#F3F4F7'&gt;.&lt;/span&gt;&lt;span style='color:#212529;
 background:#F3F4F7'&gt;rand(&lt;/span&gt;&lt;span style='color:#009999;background:#F3F4F7'&gt;5&lt;/span&gt;&lt;span
 style='color:#212529;background:#F3F4F7'&gt;, &lt;/span&gt;&lt;span style='color:#009999;
 background:#F3F4F7'&gt;3&lt;/span&gt;&lt;span style='color:#212529;background:#F3F4F7'&gt;)&lt;br&gt;
  &lt;/span&gt;&lt;span style='font-weight:bold;color:black;background:#F3F4F7'&gt;print&lt;/span&gt;&lt;span
 style='color:#212529;background:#F3F4F7'&gt;(x)&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:14.0pt'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p&gt;&lt;cite style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:9.0pt;
 color:#595959'&gt;来自 &amp;lt;&lt;a href=&quot;https://pytorch.org/get-started/locally/&quot;&gt;https://pytorch.org/get-started/locally/&lt;/a&gt;&amp;gt;
 &lt;/cite&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:14.0pt'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:14.0pt'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;ol type=1 style='margin-left:.375in;direction:ltr;unicode-bidi:embed;
  margin-top:0in;margin-bottom:0in;font-family:微软雅黑;font-size:16.0pt;
  font-weight:normal;font-style:normal'&gt;
  &lt;li value=7 style='margin-top:0;margin-bottom:0;vertical-align:middle'&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;安装&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=en-US&gt;Cuda&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;官网下载。记得更新&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=en-US&gt;N&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;卡驱动。&lt;/span&gt;&lt;/li&gt;
 &lt;/ol&gt;
 &lt;p style='margin:0in;margin-left:.375in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image011.png&quot;
 width=388 height=170 alt=在这里插入图片描述&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image012.png&quot;
 width=480 height=351 alt=在这里插入图片描述&gt;&lt;/p&gt;
 &lt;ol type=1 style='margin-left:.375in;direction:ltr;unicode-bidi:embed;
  margin-top:0in;margin-bottom:0in;font-family:微软雅黑;font-size:16.0pt;
  font-weight:normal;font-style:normal'&gt;
  &lt;li value=8 style='margin-top:0;margin-bottom:0;vertical-align:middle'&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;下载&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=en-US&gt;cud&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt;font-weight:normal;font-style:
      normal;font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;nn完成后开始放置，bin文件夹里面的东西放到cuda下载文件夹下面的bin文件夹里，以此类推，include文件夹里面的东西放到cuda的include文件夹里边，lib文件夹里面的东西放到include文件夹里边。&lt;/span&gt;&lt;/li&gt;
  &lt;li style='margin-top:0;margin-bottom:0;vertical-align:middle'&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;创建环境变量。请根据实际安装位置改变。这里是&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt' lang=en-US&gt;Cuda&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;安装在默认位置&lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt' lang=en-US&gt;C:\Program Files &lt;/span&gt;&lt;span
      style='font-family:微软雅黑;font-size:14.0pt' lang=zh-CN&gt;中的情况。&lt;/span&gt;&lt;/li&gt;
 &lt;/ol&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;NVCUDASAMPLES10_1_ROOT&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image013.png&quot;
 width=480 height=109 alt=在这里插入图片描述&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'
 lang=en-US&gt;Path&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image014.png&quot;
 width=480 height=134 alt=在这里插入图片描述&gt;&lt;/p&gt;
 &lt;p style='margin-left:.375in;margin-top:0pt;margin-bottom:12pt;line-height:
 19pt;font-family:微软雅黑;font-size:14.0pt'&gt;win+r，打开cmd，输入：nvcc
 --version查看版本，出现如下图所示的页面就算安装成功了。&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in'&gt;&lt;img src=&quot;http://localhost:4000/assets/image/2020-09-25-draft/image015.png&quot;
 width=465 height=102 alt=在这里插入图片描述&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;&lt;span
 lang=zh-CN&gt;在&lt;/span&gt;&lt;span lang=en-US&gt;python&lt;/span&gt;&lt;span lang=zh-CN&gt;中测试&lt;/span&gt;&lt;span
 lang=en-US&gt;cuda&lt;/span&gt;&lt;span lang=zh-CN&gt;是否有效，&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;&lt;span
 style='font-weight:bold;color:black;background:#F3F4F7'&gt;import &lt;/span&gt;&lt;span
 style='color:#555555;background:#F3F4F7'&gt;torch&lt;/span&gt;&lt;span style='color:#212529;
 background:#F3F4F7'&gt;&lt;br&gt;
  torch&lt;/span&gt;&lt;span style='font-weight:bold;color:black;background:#F3F4F7'&gt;.&lt;/span&gt;&lt;span
 style='color:#212529;background:#F3F4F7'&gt;cuda&lt;/span&gt;&lt;span style='font-weight:
 bold;color:black;background:#F3F4F7'&gt;.&lt;/span&gt;&lt;span style='color:#212529;
 background:#F3F4F7'&gt;is_available()&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p&gt;&lt;cite style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:9.0pt;
 color:#595959'&gt;来自 &amp;lt;&lt;a href=&quot;https://pytorch.org/get-started/locally/&quot;&gt;https://pytorch.org/get-started/locally/&lt;/a&gt;&amp;gt;
 &lt;/cite&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h2 style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:18.0pt;
 color:#4AA5FF'&gt;零基础python&lt;/h2&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span style='text-decoration:underline' lang=en-US&gt;runoob.org,
 python3 &lt;/span&gt;&lt;span style='text-decoration:underline' lang=zh-CN&gt;教程&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;a href=&quot;https://www.runoob.com/python3/python3-tutorial.html&quot;&gt;&lt;span
 lang=yo&gt;https://www.runoob.com/python3/python3-tutorial.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;h1 style='margin:0in;font-family:微软雅黑;font-size:20.0pt;color:#0080FF'
 lang=yo&gt;numpy, scipy, matplotlib,pytorch&lt;/h1&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=zh-CN&gt;用到的&lt;/span&gt;&lt;span lang=en-US&gt;scipy,numpy&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span style='text-decoration:underline' lang=zh-CN&gt;Vectors,
 Matrices, and Least Squares&lt;/span&gt;&lt;span style='text-decoration:underline'
 lang=en-US&gt;1-31,ch1-3&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;a href=&quot;https://ses.library.usyd.edu.au/handle/2123/21370&quot;&gt;&lt;span
 lang=yo&gt;https://ses.library.usyd.edu.au/handle/2123/21370&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=en-US&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:1.125in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;向量、范数&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span style='text-decoration:underline' lang=zh-CN&gt;Vectors,
 Matrices, and Least Squares&lt;/span&gt;&lt;span style='text-decoration:underline'
 lang=en-US&gt;45-103,ch6-13&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;a href=&quot;https://ses.library.usyd.edu.au/handle/2123/21370&quot;&gt;&lt;span
 lang=yo&gt;https://ses.library.usyd.edu.au/handle/2123/21370&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:1.125in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;矩阵（建立、四则、逆）&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:1.125in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;线性方程组&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:1.125in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;最小二乘&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;span lang=zh-CN&gt;用到的&lt;/span&gt;&lt;span lang=en-US&gt;pytorch,matplotlib&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&lt;span style='text-decoration:underline'&gt;DEEP LEARNING
 WITH PYTORCH: A 60 MINUTE BLITZ&lt;/span&gt;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black'&gt;&lt;a
 href=&quot;https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html&quot;&gt;&lt;span
 lang=yo&gt;https://pytorch.org/tutorials/beginner/deep_learning_60min_blitz.html&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
 &lt;p style='margin:0in;font-family:微软雅黑;font-size:14.0pt'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'
 lang=en-US&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:14.0pt'&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.75in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;font-family:微软雅黑;font-size:16.0pt;color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
 &lt;p style='margin:0in;margin-left:.375in;font-family:微软雅黑;font-size:16.0pt;
 color:black' lang=yo&gt;&amp;nbsp;&lt;/p&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;div&gt;

&lt;p style='margin:0in'&gt;&amp;nbsp;&lt;/p&gt;

&lt;p style='text-align:left;margin:0in;font-family:Arial;font-size:9pt;
color:#969696;direction:ltr'&gt;已使用 OneNote 创建。&lt;/p&gt;

&lt;/div&gt;

&lt;/body&gt;

&lt;/html&gt;</content><author><name>rym</name></author><summary type="html"></summary></entry></feed>